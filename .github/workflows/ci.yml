# .github/workflows/ci.yml

name: Build and Deploy Application

on:
  push:
    branches:
      - feature/ci-pipeline
      - main
  pull_request:
    branches:
      - feature/ci-pipeline
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the User Service image
        uses: docker/build-push-action@v5
        with:
          context: ./user-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service-image:latest
          # In a real project, you would build and push all service images here

  # deploy:
  #   name: Deploy to Kubernetes
  #   runs-on: ubuntu-latest
  #   needs: build-and-push # This job will only run if the build-and-push job succeeds

  #   steps:
  #     - name: Check out the repository
  #       uses: actions/checkout@v4

  #     - name: Set up Kubernetes context
  #       uses: azure/k8s-set-context@v4
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.KUBE_CONFIG }}

  #     - name: Deploy to Kubernetes
  #       run: |
  #         # First, update the image name in your k8s manifest to use the one from Docker Hub
  #         sed -i 's|image: user-service-image|image: ${{ secrets.DOCKERHUB_USERNAME }}/user-service-image:latest|g' k8s/user-service.yml
          
  #         # Apply all configurations
  #         kubectl apply -f k8s/

  #     - name: Verify deployment
  #       run: kubectl rollout status deployment/user-service-deployment